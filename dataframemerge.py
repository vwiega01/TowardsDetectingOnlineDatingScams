# -*- coding: utf-8 -*-
"""DataFrameMerge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uLaLJzIold1-CmJLcunapZk5IHDlYxCU

#Data Frame Merging
"""

# mount google drive
import google.colab
from google.colab import drive
drive.mount('/content/drive/')

"""##Import Excel Files into pandas Data Frame"""

import pandas as pd

real_profiles = pd.read_excel('/content/drive/MyDrive/VURF/Google_Collabs/real_profiles_excel.xlsx')
real_profiles = real_profiles.drop(columns='Unnamed: 0')

scam_profiles = pd.read_excel('/content/drive/MyDrive/VURF/Google_Collabs/scam_profiles_excel.xlsx')
scam_profiles = scam_profiles.drop(columns='Unnamed: 0')
scam_profiles = scam_profiles.astype({"scam": int})

real_profiles.head()

scam_profiles.head()

print('real profiles: ')
print(real_profiles.info())
print('scam profiles: ')
print(scam_profiles.info())

"""## Prepare Real Profiles Data Frame for Merging"""

# ****** TESTING ******
# create test data frame
real_profiles_TEST = real_profiles.copy()
real_len = len(real_profiles_TEST)
for i in range(50,real_len):
    real_profiles_TEST = real_profiles_TEST.drop(i)
print(len(real_profiles_TEST))

# TRY 1: split with age
ageS = '32 y.o.'.split(' ')
print(ageS[0])

# TRY 2: change age column to number and set data type to int
#for i in real_profiles_TEST.index:
#    age_string = real_profiles_TEST['age'][i].split(' ')
#    real_profiles_TEST['age'][i] = age_string[0]

real_profiles_TEST = real_profiles_TEST.astype({"age": int})
real_profiles_TEST.info()

# TRY 3: add file_path column which resembles username 
real_profiles_TEST['file_path'] = ''
for i in real_profiles_TEST.index:
    real_profiles_TEST['file_path'][i] = real_profiles_TEST['username'][i] + '.json'

real_profiles_TEST.head()

# ****** running on whole set ******
# create scam column and set value to 0 for false
real_profiles['scam'] = 0

# extract age and store it as an int
for i in real_profiles.index:
    age_string = real_profiles['age'][i].split(' ')
    real_profiles['age'][i] = age_string[0]
real_profiles = real_profiles.astype({"age": int})

# add file_path column from username
real_profiles['file_path'] = ''
for i in real_profiles.index:
    real_profiles['file_path'][i] = str(real_profiles['username'][i]) + '.json'

real_profiles.head()

"""## Merge the Data Frames"""

print(real_profiles.columns)
print(scam_profiles.columns)

"""###real --> scam profile columns:
* -> name
* username -> username 
* age -> age 
* gender -> gender 
* -> email
* -> phone
* ethnicity -> ethnicity
* location -> location
* occupation -> occupation
* status -> status
* match_age -> 
* children ->
* orientation ->
* religion ->
* smoking ->
* drinking ->
* intent -> 
* -> tag1, tag2, tag3, tag4, tag5, tag6, tag7, tag8, tag9 
* description -> description
* -> month_reported
* -> year_reported
* -> inet
* -> file_path
* scam -> scam


"""

# ********* TESTING *********
real_profiles_mtest = real_profiles.copy()
real_length = len(real_profiles_mtest)
for i in range(10,real_length):
    real_profiles_mtest = real_profiles_mtest.drop(i)
print(len(real_profiles_mtest))

scam_profiles_mtest = scam_profiles.copy()
scam_length = len(scam_profiles_mtest)
for i in range(10,scam_length):
    scam_profiles_mtest = scam_profiles_mtest.drop(i)
print(len(scam_profiles_mtest))

all_profiles_TEST = pd.concat([real_profiles_mtest, scam_profiles_mtest])
all_profiles_TEST = all_profiles_TEST.reset_index()
del all_profiles_TEST['index']
all_profiles_TEST.head(20)

#******** running on whole data set ********
all_profiles = pd.concat([real_profiles, scam_profiles])
all_profiles = all_profiles.reset_index()
del all_profiles['index']

# changing order of columns
all_profiles = all_profiles[['username', 'age', 'gender', 'name', 'status',
                             'ethnicity', 'occupation', 'location', 'description',
                             'email', 'phone', 'match_age', 'children', 'orientation',
                             'religion', 'smoking', 'drinking', 'intent', 'tag1', 
                             'tag2', 'tag3', 'tag4', 'tag5', 'tag6', 'tag7', 
                             'tag8', 'tag9', 'month_reported', 'year_reported',
                             'inet', 'file_path', 'scam']]
all_profiles.info()

all_profiles.head()

# send to excel file
all_profiles_copy = all_profiles.copy()
all_profiles_copy.to_excel(r'/content/drive/MyDrive/VURF/Google_Collabs/all_profiles_excel.xlsx', header=True)